name: 'reusable_create_tag'
on:
  workflow_call:
    inputs:
      tag:
        description: 'The name of the tag to be created.'
        type: 'string'
        required: true
      annotated_tag:
        description: 'Create an annotated tag in Git.'
        type: boolean
        default: true
        required: false
      # Set the branch and message defaults when declaring environment variables
      # in the job since inputs from calling workflow and the current workflow
      # are mixed, see issue: https://github.com/actions/runner/issues/2274.
      branch:
        description: 'The branch of the head commit to create tag on. Default is the default branch of the calling repository.'
        type: 'string'
        default: '${{ github.event.repository.default_branch }}'
        required: false
      message:
        description: 'Message for the tag. Default is the tag name.'
        type: 'string'
        default: 'tmp'
        required: false
      env:
        type: 'string'
        required: true
    # outputs:
    #   result:
    #     description: 'Create tag result'
    #     value: '${{ jobs.create-tag.outputs.result }}'


env:
  BRANCH: '${{ inputs.branch }}'
  TAG: '${{ inputs.tag }}'
  ANNOTATED_TAG: '${{ inputs.annotated_tag }}'
  # MESSAGE: '${{ inputs.message }}'

jobs:
  print-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: job summary
        run: |
          echo "### Inputs" >> $GITHUB_STEP_SUMMARY
          echo "- tag: ${{ env.TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "- branch: ${{ env.BRANCH }}" >> $GITHUB_STEP_SUMMARY
          echo "- annotated tag: ${{ env.ANNOTATED_TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "- message: ${{ inputs.message }}" >> $GITHUB_STEP_SUMMARY

  create-tag:
    runs-on: 'ubuntu-latest'
    needs: 'print-inputs'
    if: '${{ github.ref_name == github.event.repository.default_branch }}'
    environment: '${{ inputs.env }}'
    permissions:
      contents: 'write'
    outputs:
      result: '${{ steps.create-tag.outputs.result }}'
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - id: 'create-tag'
        name: 'create tag'
        uses: 'actions/github-script@98814c53be79b1d30f795b907e553d8679345975' # ratchet:actions/github-script@v6
        with:
          github-token: '${{ github.token }}'
          retries: '3'
          result-encoding: string
          script: |+
            const branch = process.env.BRANCH
            const tag = process.env.TAG
            const message = process.env.MESSAGE
            const annotatedTag = process.env.ANNOTATED_TAG

            // TODO(#215): Once prevent self-review in supported by GitHub, we can remove this condition.
            if (branch != '${{ github.event.repository.default_branch }}') {
              // echo `result: Skip creating tag on branch (${branch}) as currently we only support creating tags on repository default branch.` >> $GITHUB_STEP_SUMMARY
              core.info(`Skip creating tag as currently we only support creating tags on repository default branch`)
              core.setFailed(`branch (${branch}) is not the repository default branch (${{ github.event.repository.default_branch }}).`)
              return
            }

            let sha = '${{ github.sha }}'
            if (branch !== '${{ github.ref_name }}') {
              core.info(`get branch (${{ github.ref_name }})`)
              // Get branch.
              const branchToTag = await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: branch,
              })
              // Branch returns the latest commit info. See schema:
              // https://docs.github.com/en/rest/branches/branches?apiVersion=2022-11-28#get-a-branch
              sha = branchToTag['data']['commit']['sha']
            } else {
              core.info('skipped get branch')
            }

            await github.rest.git.createTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag,
              object: sha,
              type: 'commit',
              message: message,
            });

            if (annotatedTag === 'true') {
              // Create a reference for annotated tag. See reference:
              // https://docs.github.com/en/rest/git/tags?apiVersion=2022-11-28#create-a-tag-object
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag}`,
                sha: sha,
              })
              // echo `result: Created annotated tag (${tag}), branch (${branch}), commit (${sha}).` >> $GITHUB_STEP_SUMMARY
              core.info(`Created annotated tag (${tag}), branch (${branch}), commit (${sha}).`)
              return `Created annotated tag (${tag}), branch (${branch}), commit (${sha}).`
            } else {
              // echo `result: Created lightweight tag (${tag}), branch (${branch}), commit (${sha}).` >> $GITHUB_STEP_SUMMARY
              core.info(`Created lightweight tag (${tag}), branch (${branch}), commit (${sha}).`)
              return `Created lightweight tag (${tag}), branch (${branch}), commit (${sha}).`
            }

  print-outputs:
    runs-on: ubuntu-latest
    needs: 'create-tag'
    steps:
      - name: job summary
        run: |
          echo "### outputs" >> $GITHUB_STEP_SUMMARY
          echo "${{ needs.create-tag.outputs.result }}" >> $GITHUB_STEP_SUMMARY
