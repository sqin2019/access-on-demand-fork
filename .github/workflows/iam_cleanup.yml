# Copyright 2023 The Authors (see AUTHORS file)

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#      http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'aod-iam-cleanup'
# Support merge event
on:
  workflow_call:
    inputs:
      workload_identity_provider:
        description: 'The full identifier of the Workload Identity Provider, including the project number, pool name, and provider name.'
        type: 'string'
        required: true
      service_account:
        description: 'Email address or unique identifier of the Google Cloud service account for which to generate credentials.'
        type: 'string'
        required: true
      aod_cli_version:
        description: 'The version of AOD CLI.'
        type: 'string'
        default: 'latest'
        required: false
      go_version:
        description: 'The version of Golang.'
        type: 'string'
        default: '1.20'
        required: false

env:
  DEFAULT_DURATION: '2h'

jobs:
  cleanup:
    # if: '${{ github.event.review.state == ''approved'' }}'
    # Handle on merge
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'write'
      id-token: 'write'
      pull-requests: 'write'
    name: 'Cleanup IAM Request'
    steps:
      - uses: 'actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab' # ratchet:actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Get added yaml files'
        id: 'added-yaml-files'
        uses: 'tj-actions/changed-files@fb20f4d24890fadc539505b1746d260504b213d0' # ratchet:tj-actions/changed-files@v36
        with:
          files: 'requests/*.{yml,yaml}'
      - name: 'Setup Go'
        if: '${{ steps.added-yaml-files.outputs.added_files != '''' }}'
        uses: 'actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568' # ratchet:actions/setup-go@v3
        with:
          go-version: '${{ inputs.go_version }}'
      - name: 'Authenticate to Google Cloud'
        if: '${{ steps.added-yaml-files.outputs.added_files != '''' }}'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ inputs.workload_identity_provider }}'
          service_account: '${{ inputs.service_account }}'
          token_format: 'access_token'
      - name: 'Install AOD CLI'
        if: '${{ steps.added-yaml-files.outputs.added_files != '''' }}'
        run: 'go install github.com/sqin2019/access-on-demand-fork/cmd/aod@${{ inputs.aod_cli_version }}'
      # Request will not be handled when iam.yaml file does not exist in the
      # case of a pull_request_review event, instead it prints out a notice.
      - name: 'Cleanup IAM Request'
        id: 'remove_expired'
        if: '${{ steps.added-yaml-files.outputs.added_files != '''' }}'
        env:
          # DURATION: '${{ env.DEFAULT_DURATION }}'
          # IAM_FILE_PATH: '${{ steps.added-yaml-files.outputs.added_files }}'
          START_TIME: '${{ github.event.head_commit.timestamp }}'
        run: |
          ls ./requests
          ls requests .
          for file in $(ls ./requests); do
            current_time=$(date +%s)
            mergeTime=$(git log -1 --format=%ct ./requests/${file})
            # duration=$(awk -F_ '{print $2}' <<< ${file})
            # expiry=$(date -u -d "${mergeTime} ${duration}" --rfc-3339=seconds)
            if [[ ${current_time} -gt ${mergeTime} ]]; then
              aod iam cleanup -path ./requests/${file}
              echo -e "Removing $file with IAM expiration $expiry"
              rm ./requests/${file}
              echo removed='true' >> $GITHUB_OUTPUT
            fi
          done
      - name: 'Create PR'
        id: 'cpr'
        if: '${{ steps.remove_expired.outputs.removed }}'
        uses: 'peter-evans/create-pull-request@v5'
        with:
          commit-message: 'Remove expired AOD requests'
          title: 'Remove expired AOD requests'
      - name: 'Approve PR'
        if: '${{ steps.cpr.outputs.pull-request-number }}'
        uses: 'hmarr/auto-approve-action@v3'
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          review-message: 'Auto approved automated PR'
          pull-request-number: '${{ steps.cpr.outputs.pull-request-number }}'
      - name: 'Enable Pull Request Automerge'
        if: '${{ steps.cpr.outputs.pull-request-number }}'
        uses: 'peter-evans/enable-pull-request-automerge@v3'
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}

